
import com.azure.resourcemanager.oracledatabase.models.AutonomousDatabaseProperties;
import com.azure.resourcemanager.oracledatabase.models.AutonomousMaintenanceScheduleType;
import com.azure.resourcemanager.oracledatabase.models.ComputeModel;
import com.azure.resourcemanager.oracledatabase.models.CustomerContact;
import com.azure.resourcemanager.oracledatabase.models.DatabaseEditionType;
import com.azure.resourcemanager.oracledatabase.models.DayOfWeek;
import com.azure.resourcemanager.oracledatabase.models.DayOfWeekName;
import com.azure.resourcemanager.oracledatabase.models.LicenseModel;
import com.azure.resourcemanager.oracledatabase.models.LongTermBackUpScheduleDetails;
import com.azure.resourcemanager.oracledatabase.models.OpenModeType;
import com.azure.resourcemanager.oracledatabase.models.PermissionLevelType;
import com.azure.resourcemanager.oracledatabase.models.RepeatCadenceType;
import com.azure.resourcemanager.oracledatabase.models.RoleType;
import com.azure.resourcemanager.oracledatabase.models.ScheduledOperationsType;
import com.azure.resourcemanager.oracledatabase.models.WorkloadType;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for AutonomousDatabases CreateOrUpdate.
 */
public final class Main {
    /*
     * x-ms-original-file: 2025-09-01/AutonomousDatabases_CreateOrUpdate_MaximumSet_Gen.json
     */
    /**
     * Sample code: Create Autonomous Database - generated by [MaximumSet] rule.
     * 
     * @param manager Entry point to OracleDatabaseManager.
     */
    public static void createAutonomousDatabaseGeneratedByMaximumSetRule(
        com.azure.resourcemanager.oracledatabase.OracleDatabaseManager manager) {
        manager.autonomousDatabases().define("databasedb1").withRegion("eastus").withExistingResourceGroup("rgopenapi")
            .withTags(mapOf())
            .withProperties(new AutonomousDatabaseProperties().withAdminPassword("fakeTokenPlaceholder")
                .withAutonomousMaintenanceScheduleType(AutonomousMaintenanceScheduleType.REGULAR)
                .withCharacterSet("AL32UTF8").withComputeCount(2.0D).withComputeModel(ComputeModel.ECPU)
                .withCpuCoreCount(1)
                .withCustomerContacts(Arrays.asList(new CustomerContact().withEmail(
                    "agyiqecugrloatgwpvmilmvutcnyjpxzhbilhhqfvqqblfgursqelzjjnwnmpfstitmcgkovzxnstiqqwjnhwwaufbnkebpqxlqwmfnmtlkgkoxcnjwcnfqbdtokhjalagxphkuiwxtxrzuipokiuczmuwoqoebkjvhytlhtxzshwsdoywluoggznuyuozqibiwdgwqbgnyogysdjpvlowmvuvq")))
                .withDataStorageSizeInTbs(1).withDataStorageSizeInGbs(1024).withDbVersion("18.4.0.0")
                .withDbWorkload(WorkloadType.OLTP).withDisplayName("example_autonomous_databasedb1")
                .withIsAutoScalingEnabled(true).withIsAutoScalingForStorageEnabled(true)
                .withPeerDbId(
                    "jghxnzevghltfytskymsxgyrugfedzchifwoezwbcwzzvpikoqqjcdiesbidbeqkmncodchlmktetjlgjgbaofwpwmpvckmusaunrzdrctypasgcabyjwxwzkodwugdpeprikvxygxyb")
                .withIsLocalDataGuardEnabled(true).withIsMtlsConnectionRequired(true)
                .withIsPreviewVersionWithServiceTermsAccepted(true)
                .withLicenseModel(LicenseModel.BRING_YOUR_OWN_LICENSE).withNcharacterSet("AL16UTF16")
                .withScheduledOperationsList(Arrays
                    .asList(new ScheduledOperationsType().withDayOfWeek(new DayOfWeek().withName(DayOfWeekName.MONDAY))
                        .withScheduledStartTime("lwwvkazgmfremfwhckfb")
                        .withScheduledStopTime("hjwagzxijpiaogulmnmbuqakpqxhkjvaypjqnvbvtjddc")))
                .withPrivateEndpointIp("rdlbhw").withPrivateEndpointLabel("worwqllbglhyakksevparfuaivc")
                .withSubnetId(
                    "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg000/providers/Microsoft.Network/virtualNetworks/vnet1/subnets/subnet1")
                .withVnetId(
                    "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg000/providers/Microsoft.Network/virtualNetworks/vnet1")
                .withDatabaseEdition(DatabaseEditionType.ENTERPRISE_EDITION)
                .withAutonomousDatabaseId(
                    "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg000/providers/Oracle.Database/autonomousDatabases/databasedb1")
                .withLongTermBackupSchedule(
                    new LongTermBackUpScheduleDetails().withRepeatCadence(RepeatCadenceType.ONE_TIME)
                        .withTimeOfBackup(OffsetDateTime.parse("2025-08-01T04:32:58.715Z"))
                        .withRetentionPeriodInDays(188).withIsDisabled(true))
                .withLocalAdgAutoFailoverMaxDataLossLimit(1759).withOpenMode(OpenModeType.READ_ONLY)
                .withPermissionLevel(PermissionLevelType.RESTRICTED).withRole(RoleType.PRIMARY)
                .withBackupRetentionPeriodInDays(1)
                .withWhitelistedIps(Arrays.asList("1.1.1.1", "1.1.1.0/24", "1.1.2.25")))
            .create();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
