
import com.azure.resourcemanager.networkanalytics.models.DataProductProperties;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for DataProducts Create.
 */
public final class Main {
    /*
     * x-ms-original-file:
     * specification/networkanalytics/resource-manager/Microsoft.NetworkAnalytics/stable/2023-11-15/examples/
     * DataProducts_Create_MinimumSet_Gen.json
     */
    /**
     * Sample code: DataProducts_Create_MaximumSet_Gen - generated by [MinimumSet] rule_MinimumSet_Gen.
     * 
     * @param manager Entry point to NetworkAnalyticsManager.
     */
    public static void dataProductsCreateMaximumSetGenGeneratedByMinimumSetRuleMinimumSetGen(
        com.azure.resourcemanager.networkanalytics.NetworkAnalyticsManager manager) {
        manager.dataProducts().define("dataproduct01").withRegion("eastus")
            .withExistingResourceGroup("aoiresourceGroupName")
            .withTags(mapOf("userSpecifiedKeyName", "fakeTokenPlaceholder"))
            .withProperties(
                new DataProductProperties().withPublisher("Microsoft").withProduct("MCC").withMajorVersion("1.0.0"))
            .create();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
