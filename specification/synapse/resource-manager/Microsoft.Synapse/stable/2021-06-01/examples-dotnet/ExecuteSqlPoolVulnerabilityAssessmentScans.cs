using Azure;
using Azure.ResourceManager;
using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.Synapse.Models;
using Azure.ResourceManager.Synapse;

// Generated from example definition: specification/synapse/resource-manager/Microsoft.Synapse/stable/2021-06-01/examples/ExecuteSqlPoolVulnerabilityAssessmentScans.json
// this example is just showing the usage of "SqlPoolVulnerabilityAssessmentScans_InitiateScan" operation, for the dependent resources, they will have to be created separately.

// get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
TokenCredential cred = new DefaultAzureCredential();
// authenticate your client
ArmClient client = new ArmClient(cred);

// this example assumes you already have this SynapseVulnerabilityAssessmentScanRecordResource created on azure
// for more information of creating SynapseVulnerabilityAssessmentScanRecordResource, please refer to the document of SynapseVulnerabilityAssessmentScanRecordResource
string subscriptionId = "00000000-1111-2222-3333-444444444444";
string resourceGroupName = "vulnerabilityassessmenttest-4711";
string workspaceName = "vulnerabilityassessmenttest-6411";
string sqlPoolName = "testdb";
SynapseVulnerabilityAssessmentName vulnerabilityAssessmentName = SynapseVulnerabilityAssessmentName.Default;
string scanId = "scan01";
ResourceIdentifier synapseVulnerabilityAssessmentScanRecordResourceId = SynapseVulnerabilityAssessmentScanRecordResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName, sqlPoolName, vulnerabilityAssessmentName, scanId);
SynapseVulnerabilityAssessmentScanRecordResource synapseVulnerabilityAssessmentScanRecord = client.GetSynapseVulnerabilityAssessmentScanRecordResource(synapseVulnerabilityAssessmentScanRecordResourceId);

// invoke the operation
await synapseVulnerabilityAssessmentScanRecord.InitiateScanAsync(WaitUntil.Completed);

Console.WriteLine("Succeeded");
